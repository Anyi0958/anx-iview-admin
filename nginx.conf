#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


#   开启gzip模式
#   gzip on;

#   gizp压缩起点，文件大于25k才进行压缩
#   gzip_min_length 25;

#   gzip 压缩级别为1-9，数字越大压缩的越好，也越占用CPU的资源，自己一般设置4-6范围
#   gzip_comp_level 4;

#   进行压缩的文件类型
#   gzip_types text/plain application/javascript text/css application/xml text/javascript application/json;

#   是否传输gzip压缩标志，就是在http header中添加Vary: Accept-Encoding，建议开启
#   gzip_vary on;

#   设置gzip压缩针对的http协议版本，可以不设置，目前几乎都是1.1
#   gzip_http_version 1.1;


# 开启GZIP
    gzip  on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_comp_level 9;
    gzip_vary on;
    gzip_types text/plain application/javascript text/css application/xml text/javascript application/json;


    server {
        listen       80;
        server_name  anitt.cn;

        gzip on;
        gzip_min_length 1k;
        gzip_comp_level 9;
        gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
        gzip_vary on;
        gzip_disable "MSIE [1-6]\.";

        # Vue路由模式为history需添加的配置
        location / {
            if (!-e $request_filename) {
                rewrite ^(.*)$ /index.html?s=$1 last;
                break;
            }
            root   dist;
            index  index.html;
        }

        # proxy_pass 地址后面加 / 代理后的地址 会把 location 后面的内容去掉
        # 访问 anitt.cn/xboot/123/456
        # location /xboot/ {
        #     proxy_pass http://127.0.0.1:8888;
        # }
        # 结果 http://127.0.0.1:8888/xboot/123/456
        # location /xboot/ {
        #     proxy_pass http://127.0.0.1:8888/;
        # }
        # 结果 http://127.0.0.1:8888/123/456

        location /xboot/ {
            proxy_pass http://127.0.0.1:8888;
        }
        location /swagger-ui.html {
            proxy_pass http://127.0.0.1:8888;
        }
        location /swagger-resources {
            proxy_pass http://127.0.0.1:8888;
        }
        location /swagger {
            proxy_pass http://127.0.0.1:8888;
        }
        location /webjars {
            proxy_pass http://127.0.0.1:8888;
        }
        location /v2 {
            proxy_pass http://127.0.0.1:8888;
        }
        location /druid {
            proxy_pass http://127.0.0.1:8888;
        }
        # 完整版使用到Activiti工作流设计器需加入以下配置
        location /modeler.html {
            proxy_pass http://127.0.0.1:8888;
         }
        location /editor-app {
            proxy_pass http://127.0.0.1:8888;
        }
        # 以上为完整版需要加的反向代理转发路径规则

        # 获取真实IP以及Websocket需添加的配置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header REMOTE-HOST $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # 客户端Body大小限制（文件上传大小限制配置）
        client_max_body_size 8m;

        error_page   500 502 503 504 404  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

    server {
        listen      443 ssl;
        server_name anitt.cn;

        ssl_certificate ../cert/4290726_anitt.cn.pem;
        ssl_certificate_key ../cert/4290726_anitt.cn.key;

        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        location / {
            if (!-e $request_filename) {
                rewrite ^(.*)$ /index.html?s=$1 last;
                break;
            }
            root   dist;
            index  index.html;
        }
    }
}

